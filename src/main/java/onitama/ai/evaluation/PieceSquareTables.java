package onitama.ai.evaluation;

import java.util.HashMap;

import onitama.model.Card;
import onitama.tuning.SpsaTuner;

public class PieceSquareTables {
    /** Fallback PST used for missing cards. */
    public static double[] CENTER_PRIORITY = new double[] {
         0,  4,  8,  4,  0,
         4,  8, 12,  8,  4,
         8, 12, 16, 12,  8,
         4,  8, 12,  8,  4,
         0,  4,  8,  4,  0,
    };

    /**
     * Created by {@link SpsaTuner}. Compared to the {@link CenterPriorityEvaluator},
     * this PST has an Elo advantage of around +180 with a fixed search depth,
     * and around +100 with a fixed time allowed per move.
     */
    @SuppressWarnings("serial")
    public static HashMap<Card, double[][][]> CARD_PHASE_PIECE_POSITION_RAW_SCORES_ORIGINAL_CARDS = new HashMap<Card, double[][][]>() {{
       put(Card.Tiger, new double[][][] {{{
           -2.37, 16.91, 11.20, 16.91, -2.37,
           9.82, 0.31, 16.96, 0.31, 9.82,
           -3.82, 4.78, 22.97, 4.78, -3.82,
           -6.13, 7.20, 8.36, 7.20, -6.13,
           -8.45, 1.58, 11.13, 1.58, -8.45,
           },{
           8.91, 16.55, 16.34, 16.55, 8.91,
           16.52, 9.24, 19.98, 9.24, 16.52,
           11.46, 11.51, 16.88, 11.51, 11.46,
           7.13, 3.11, 6.28, 3.11, 7.13,
           -5.36, 3.40, 14.76, 3.40, -5.36,
           }},{{
           7.59, 10.72, 3.24, 10.72, 7.59,
           -3.54, 4.42, 12.06, 4.42, -3.54,
           -2.09, 5.42, 6.62, 5.42, -2.09,
           2.24, 5.83, 8.33, 5.83, 2.24,
           7.13, 3.82, 7.56, 3.82, 7.13,
           },{
           7.10, 13.42, 12.24, 13.42, 7.10,
           -0.88, 3.89, 12.39, 3.89, -0.88,
           2.94, 5.39, 20.00, 5.39, 2.94,
           5.94, 5.84, 6.83, 5.84, 5.94,
           -3.13, 0.68, -1.47, 0.68, -3.13,
       }}});
       put(Card.Crab, new double[][][] {{{
           11.31, 14.73, -3.28, 14.73, 11.31,
           7.39, 4.90, -0.37, 4.90, 7.39,
           9.05, 12.73, 18.65, 12.73, 9.05,
           2.85, 5.70, 5.82, 5.70, 2.85,
           -8.89, -1.51, 0.24, -1.51, -8.89,
           },{
           17.51, 5.48, 8.45, 5.48, 17.51,
           11.38, 13.06, 10.52, 13.06, 11.38,
           -1.88, -1.45, 1.49, -1.45, -1.88,
           4.82, -0.20, 10.58, -0.20, 4.82,
           5.31, 7.01, 8.71, 7.01, 5.31,
           }},{{
           5.67, 5.90, 5.50, 5.90, 5.67,
           -2.09, 8.81, 12.64, 8.81, -2.09,
           6.51, 9.51, 11.36, 9.51, 6.51,
           -1.48, 8.33, 10.42, 8.33, -1.48,
           -4.19, 1.17, 3.86, 1.17, -4.19,
           },{
           9.39, 10.71, 18.36, 10.71, 9.39,
           13.62, 21.50, 10.73, 21.50, 13.62,
           6.87, 10.51, 8.54, 10.51, 6.87,
           -0.18, 2.59, 3.06, 2.59, -0.18,
           -6.54, -4.45, -4.67, -4.45, -6.54,
       }}});
       put(Card.Monkey, new double[][][] {{{
           2.40, 8.11, 8.41, 8.11, 2.40,
           -8.61, 14.91, 4.12, 14.91, -8.61,
           8.79, 11.91, 6.15, 11.91, 8.79,
           1.28, 6.32, 2.53, 6.32, 1.28,
           -9.05, -0.62, -9.26, -0.62, -9.05,
           },{
           -0.14, 6.05, 9.18, 6.05, -0.14,
           18.09, 3.98, 6.60, 3.98, 18.09,
           11.56, 8.22, 2.05, 8.22, 11.56,
           -3.29, 16.38, 3.31, 16.38, -3.29,
           2.86, 7.38, 11.26, 7.38, 2.86,
           }},{{
           0.41, 4.56, 6.77, 4.56, 0.41,
           0.39, 5.20, 3.53, 5.20, 0.39,
           1.35, 7.38, 11.13, 7.38, 1.35,
           0.74, 7.59, 11.22, 7.59, 0.74,
           5.65, 5.15, 8.31, 5.15, 5.65,
           },{
           1.75, 0.75, -0.23, 0.75, 1.75,
           9.08, 25.04, 2.92, 25.04, 9.08,
           2.23, 9.09, 10.48, 9.09, 2.23,
           -3.26, 1.39, 4.42, 1.39, -3.26,
           -7.96, -2.54, -0.77, -2.54, -7.96,
       }}});
       put(Card.Crane, new double[][][] {{{
           4.26, -0.92, 7.86, -0.92, 4.26,
           6.36, 10.20, 10.76, 10.20, 6.36,
           1.62, 7.61, 9.96, 7.61, 1.62,
           1.24, 1.92, 10.83, 1.92, 1.24,
           -7.42, -1.01, 0.20, -1.01, -7.42,
           },{
           0.79, -1.80, 6.04, -1.80, 0.79,
           15.78, 5.53, 3.98, 5.53, 15.78,
           14.25, 1.98, -0.81, 1.98, 14.25,
           7.76, 6.01, 15.00, 6.01, 7.76,
           -5.11, 9.38, 10.95, 9.38, -5.11,
           }},{{
           11.08, 4.36, -1.15, 4.36, 11.08,
           -0.59, 6.78, 7.64, 6.78, -0.59,
           4.41, 9.09, 10.14, 9.09, 4.41,
           -2.04, 7.20, 9.40, 7.20, -2.04,
           0.07, 2.80, 4.93, 2.80, 0.07,
           },{
           2.42, 12.24, 1.61, 12.24, 2.42,
           5.00, 18.75, 23.56, 18.75, 5.00,
           3.19, 7.04, 5.93, 7.04, 3.19,
           -2.88, 1.54, 0.97, 1.54, -2.88,
           -6.82, -5.71, -5.81, -5.71, -6.82,
       }}});
       put(Card.Dragon, new double[][][] {{{
           12.57, 11.44, 5.12, 11.44, 12.57,
           6.69, 5.31, 8.09, 5.31, 6.69,
           5.62, 10.73, 8.78, 10.73, 5.62,
           4.60, 4.09, 6.56, 4.09, 4.60,
           -3.27, -3.80, 7.04, -3.80, -3.27,
           },{
           6.36, 9.73, 2.36, 9.73, 6.36,
           7.13, 16.45, 3.68, 16.45, 7.13,
           11.02, 11.01, 8.15, 11.01, 11.02,
           3.98, 3.03, 13.47, 3.03, 3.98,
           6.25, 11.84, 11.77, 11.84, 6.25,
           }},{{
           6.73, 1.02, 7.77, 1.02, 6.73,
           2.43, 5.23, 8.90, 5.23, 2.43,
           7.89, 7.73, 6.15, 7.73, 7.89,
           7.32, 8.22, 9.32, 8.22, 7.32,
           2.87, 3.09, 3.56, 3.09, 2.87,
           },{
           2.82, 7.90, 7.95, 7.90, 2.82,
           25.44, 13.03, 8.48, 13.03, 25.44,
           10.16, 11.31, 5.79, 11.31, 10.16,
           1.71, 3.58, 2.36, 3.58, 1.71,
           -6.30, -7.24, -5.46, -7.24, -6.30,
       }}});
       put(Card.Elephant, new double[][][] {{{
           7.51, -2.13, 8.71, -2.13, 7.51,
           9.74, 9.44, 7.65, 9.44, 9.74,
           5.36, 10.34, 12.53, 10.34, 5.36,
           3.02, 5.92, 4.13, 5.92, 3.02,
           -3.86, -1.13, 2.04, -1.13, -3.86,
           },{
           12.93, 2.61, 4.99, 2.61, 12.93,
           9.73, 15.67, 9.14, 15.67, 9.73,
           10.42, 5.08, 7.10, 5.08, 10.42,
           3.06, 7.13, -1.42, 7.13, 3.06,
           8.06, 11.57, 10.92, 11.57, 8.06,
           }},{{
           2.69, 13.32, 6.06, 13.32, 2.69,
           -3.57, 5.79, 2.62, 5.79, -3.57,
           3.25, 9.57, 13.64, 9.57, 3.25,
           2.02, 7.57, 10.51, 7.57, 2.02,
           -1.10, 5.78, 7.91, 5.78, -1.10,
           },{
           5.08, 4.31, -2.24, 4.31, 5.08,
           15.71, 21.79, -2.33, 21.79, 15.71,
           4.35, 13.02, 17.76, 13.02, 4.35,
           -0.31, 3.66, 6.39, 3.66, -0.31,
           -10.12, -1.70, 2.52, -1.70, -10.12,
       }}});
       put(Card.Mantis, new double[][][] {{{
           1.46, 9.87, 3.96, 9.87, 1.46,
           7.35, -1.10, 17.88, -1.10, 7.35,
           5.55, 11.26, 11.30, 11.26, 5.55,
           -0.14, 6.15, 4.22, 6.15, -0.14,
           -7.07, 1.07, 1.98, 1.07, -7.07,
           },{
           9.54, 8.14, 7.90, 8.14, 9.54,
           10.98, 20.76, -3.46, 20.76, 10.98,
           0.67, 10.91, -1.07, 10.91, 0.67,
           6.49, 6.55, 6.73, 6.55, 6.49,
           -0.33, 9.18, 9.93, 9.18, -0.33,
           }},{{
           7.79, -3.60, 5.77, -3.60, 7.79,
           3.82, 3.42, 8.25, 3.42, 3.82,
           3.24, 6.70, 9.31, 6.70, 3.24,
           2.33, 7.64, 9.52, 7.64, 2.33,
           3.38, 4.15, 5.39, 4.15, 3.38,
           },{
           6.32, 0.90, 8.15, 0.90, 6.32,
           13.90, 24.45, 6.60, 24.45, 13.90,
           4.31, 8.99, 8.21, 8.99, 4.31,
           -1.97, 2.89, 6.54, 2.89, -1.97,
           -10.80, -2.63, -0.19, -2.63, -10.80,
       }}});
       put(Card.Boar, new double[][][] {{{
           2.16, 10.47, 8.37, 10.47, 2.16,
           7.32, 5.68, 15.85, 5.68, 7.32,
           0.96, 8.64, 10.69, 8.64, 0.96,
           2.87, 3.36, 4.16, 3.36, 2.87,
           -9.57, -3.90, 7.00, -3.90, -9.57,
           },{
           8.73, 11.23, 9.74, 11.23, 8.73,
           7.59, 9.90, 9.06, 9.90, 7.59,
           6.01, 6.52, 1.62, 6.52, 6.01,
           9.51, 0.74, 4.63, 0.74, 9.51,
           4.80, 11.21, 13.94, 11.21, 4.80,
           }},{{
           3.92, 7.63, 8.37, 7.63, 3.92,
           -1.23, 4.02, 13.69, 4.02, -1.23,
           3.56, 6.86, 13.19, 6.86, 3.56,
           2.55, 6.73, 8.57, 6.73, 2.55,
           -0.60, 4.68, 2.95, 4.68, -0.60,
           },{
           16.38, 12.39, 5.58, 12.39, 16.38,
           8.05, 17.05, 9.54, 17.05, 8.05,
           7.55, 9.21, 13.08, 9.21, 7.55,
           0.26, 4.65, 4.70, 4.65, 0.26,
           -4.53, 0.19, 0.83, 0.19, -4.53,
       }}});
       put(Card.Frog, new double[][][] {{{
           -0.29, 4.10, 9.45, 0.65, 1.67,
           3.42, 17.31, 10.25, 3.88, 9.57,
           6.44, 9.01, 11.76, 7.52, 6.18,
           -5.55, 3.85, 4.31, 8.58, 5.43,
           -12.04, -6.54, 2.60, 4.14, 3.82,
           },{
           0.33, 9.23, 3.43, -2.80, 8.37,
           17.70, 7.60, 6.16, 4.81, 13.20,
           1.91, 10.98, 1.73, -2.22, 3.14,
           9.61, 5.44, -0.78, 5.07, -0.27,
           4.40, 3.29, 7.15, 5.89, 5.80,
           }},{{
           -2.60, 3.81, 2.58, 11.69, 5.02,
           0.13, 7.61, 9.10, 12.68, 10.56,
           4.21, 7.81, 9.31, 9.65, 9.73,
           1.98, 1.39, 8.68, 12.69, 11.33,
           2.07, 3.56, 2.97, 5.33, 0.14,
           },{
           4.42, 4.78, 2.24, 9.88, 9.32,
           1.57, 12.53, 15.74, 14.18, 9.67,
           -1.11, 5.14, 10.12, 11.96, 11.23,
           -7.46, -0.92, 1.91, 4.88, 3.30,
           -4.84, -6.63, -2.10, -1.99, -0.12,
       }}});
       put(Card.Goose, new double[][][] {{{
           10.01, 11.39, 7.37, 19.71, 5.99,
           9.66, 14.18, 2.73, 7.41, 6.15,
           5.02, 6.64, 11.48, 9.63, 6.57,
           -0.17, 4.25, 3.78, 5.90, 4.26,
           -10.84, -4.26, -2.18, -1.68, -0.58,
           },{
           4.34, 0.97, -1.50, 9.85, 4.37,
           3.69, 3.02, 11.91, 1.64, -1.78,
           7.59, 5.56, 4.11, 8.38, 7.70,
           9.00, 11.12, 2.35, 7.62, 6.29,
           6.93, 6.93, 12.04, 8.77, 10.37,
           }},{{
           8.36, 4.37, 4.73, 11.59, 5.63,
           5.55, 5.93, 6.49, 9.03, 2.30,
           3.94, 7.94, 13.41, 10.26, -1.25,
           3.33, 3.72, 9.07, 8.91, 4.79,
           0.24, 1.34, 5.45, 4.77, 1.41,
           },{
           13.31, 5.62, 5.42, 1.86, 3.36,
           9.88, 14.55, 15.43, 16.26, 13.40,
           1.94, 6.71, 10.22, 10.16, 7.01,
           -3.16, 1.77, 5.00, 3.37, 1.67,
           -2.01, -3.64, 0.06, -0.40, -5.04,
       }}});
       put(Card.Horse, new double[][][] {{{
           7.73, 1.16, 10.11, 9.38, 9.59,
           2.36, 4.52, 7.79, 4.66, 1.24,
           3.97, 10.83, 7.41, 8.77, 5.85,
           -0.66, 5.35, 6.98, 3.01, 4.98,
           -5.56, -1.57, -1.07, -0.20, -0.10,
           },{
           10.99, 10.06, 6.17, 6.46, 8.68,
           15.20, 1.80, 17.89, 2.58, 0.62,
           4.84, 12.63, 6.22, 4.43, 11.96,
           9.48, 1.16, 8.73, 1.07, 6.17,
           6.67, 7.92, 8.43, 6.23, 9.25,
           }},{{
           1.41, 5.92, 10.17, 8.58, 6.42,
           0.60, 6.68, 8.03, 8.95, 6.27,
           -1.75, 3.88, 10.75, 8.08, 2.90,
           1.75, 6.12, 8.55, 8.06, 1.36,
           -2.39, 3.61, 0.65, 3.63, 0.44,
           },{
           5.68, 1.70, 2.55, 14.40, 1.96,
           6.41, 14.77, 22.38, 10.00, 8.91,
           5.82, 9.90, 11.14, 10.39, 6.72,
           2.05, 3.07, 3.99, 5.10, 1.65,
           -4.97, -0.01, -0.13, 0.10, -2.88,
       }}});
       put(Card.Eel, new double[][][] {{{
           16.43, 2.66, 7.15, 20.85, 3.74,
           0.93, 7.55, 9.38, 9.64, 6.03,
           7.12, 7.25, 8.66, 6.40, 11.70,
           0.72, 1.92, 6.72, 6.59, 1.44,
           -9.36, -7.79, 5.26, 1.83, -4.39,
           },{
           1.75, 13.34, 10.57, 7.00, 9.49,
           6.41, 17.31, 18.52, 0.86, 5.98,
           7.14, 7.38, 1.58, 11.95, 9.81,
           9.53, 11.27, 2.43, 6.21, 3.82,
           6.43, 7.13, 10.32, 6.39, 6.43,
           }},{{
           7.43, 1.98, 9.63, 4.88, 0.62,
           -2.61, 0.63, 6.45, 7.52, 6.51,
           1.92, 7.77, 9.04, 9.04, 4.24,
           1.18, 3.52, 7.59, 8.22, 4.81,
           1.04, 2.26, 3.73, 4.34, 8.11,
           },{
           7.03, 13.28, 4.73, 8.83, 4.19,
           8.43, 10.26, 15.21, 19.30, 12.50,
           0.98, 5.68, 5.84, 4.47, 4.61,
           0.62, 2.40, 3.49, 3.50, -2.17,
           -7.12, -1.12, 0.61, -2.02, -0.34,
       }}});
       put(Card.Rabbit, new double[][][] {{{
           1.67, 0.65, 9.45, 4.10, -0.29,
           9.57, 3.88, 10.25, 17.31, 3.42,
           6.18, 7.52, 11.76, 9.01, 6.44,
           5.43, 8.58, 4.31, 3.85, -5.55,
           3.82, 4.14, 2.60, -6.54, -12.04,
           },{
           8.37, -2.80, 3.43, 9.23, 0.33,
           13.20, 4.81, 6.16, 7.60, 17.70,
           3.14, -2.22, 1.73, 10.98, 1.91,
           -0.27, 5.07, -0.78, 5.44, 9.61,
           5.80, 5.89, 7.15, 3.29, 4.40,
           }},{{
           5.02, 11.69, 2.58, 3.81, -2.60,
           10.56, 12.68, 9.10, 7.61, 0.13,
           9.73, 9.65, 9.31, 7.81, 4.21,
           11.33, 12.69, 8.68, 1.39, 1.98,
           0.14, 5.33, 2.97, 3.56, 2.07,
           },{
           9.32, 9.88, 2.24, 4.78, 4.42,
           9.67, 14.18, 15.74, 12.53, 1.57,
           11.23, 11.96, 10.12, 5.14, -1.11,
           3.30, 4.88, 1.91, -0.92, -7.46,
           -0.12, -1.99, -2.10, -6.63, -4.84,
       }}});
       put(Card.Rooster, new double[][][] {{{
           5.99, 19.71, 7.37, 11.39, 10.01,
           6.15, 7.41, 2.73, 14.18, 9.66,
           6.57, 9.63, 11.48, 6.64, 5.02,
           4.26, 5.90, 3.78, 4.25, -0.17,
           -0.58, -1.68, -2.18, -4.26, -10.84,
           },{
           4.37, 9.85, -1.50, 0.97, 4.34,
           -1.78, 1.64, 11.91, 3.02, 3.69,
           7.70, 8.38, 4.11, 5.56, 7.59,
           6.29, 7.62, 2.35, 11.12, 9.00,
           10.37, 8.77, 12.04, 6.93, 6.93,
           }},{{
           5.63, 11.59, 4.73, 4.37, 8.36,
           2.30, 9.03, 6.49, 5.93, 5.55,
           -1.25, 10.26, 13.41, 7.94, 3.94,
           4.79, 8.91, 9.07, 3.72, 3.33,
           1.41, 4.77, 5.45, 1.34, 0.24,
           },{
           3.36, 1.86, 5.42, 5.62, 13.31,
           13.40, 16.26, 15.43, 14.55, 9.88,
           7.01, 10.16, 10.22, 6.71, 1.94,
           1.67, 3.37, 5.00, 1.77, -3.16,
           -5.04, -0.40, 0.06, -3.64, -2.01,
       }}});
       put(Card.Ox, new double[][][] {{{
           9.59, 9.38, 10.11, 1.16, 7.73,
           1.24, 4.66, 7.79, 4.52, 2.36,
           5.85, 8.77, 7.41, 10.83, 3.97,
           4.98, 3.01, 6.98, 5.35, -0.66,
           -0.10, -0.20, -1.07, -1.57, -5.56,
           },{
           8.68, 6.46, 6.17, 10.06, 10.99,
           0.62, 2.58, 17.89, 1.80, 15.20,
           11.96, 4.43, 6.22, 12.63, 4.84,
           6.17, 1.07, 8.73, 1.16, 9.48,
           9.25, 6.23, 8.43, 7.92, 6.67,
           }},{{
           6.42, 8.58, 10.17, 5.92, 1.41,
           6.27, 8.95, 8.03, 6.68, 0.60,
           2.90, 8.08, 10.75, 3.88, -1.75,
           1.36, 8.06, 8.55, 6.12, 1.75,
           0.44, 3.63, 0.65, 3.61, -2.39,
           },{
           1.96, 14.40, 2.55, 1.70, 5.68,
           8.91, 10.00, 22.38, 14.77, 6.41,
           6.72, 10.39, 11.14, 9.90, 5.82,
           1.65, 5.10, 3.99, 3.07, 2.05,
           -2.88, 0.10, -0.13, -0.01, -4.97,
       }}});
       put(Card.Cobra, new double[][][] {{{
           3.74, 20.85, 7.15, 2.66, 16.43,
           6.03, 9.64, 9.38, 7.55, 0.93,
           11.70, 6.40, 8.66, 7.25, 7.12,
           1.44, 6.59, 6.72, 1.92, 0.72,
           -4.39, 1.83, 5.26, -7.79, -9.36,
           },{
           9.49, 7.00, 10.57, 13.34, 1.75,
           5.98, 0.86, 18.52, 17.31, 6.41,
           9.81, 11.95, 1.58, 7.38, 7.14,
           3.82, 6.21, 2.43, 11.27, 9.53,
           6.43, 6.39, 10.32, 7.13, 6.43,
           }},{{
           0.62, 4.88, 9.63, 1.98, 7.43,
           6.51, 7.52, 6.45, 0.63, -2.61,
           4.24, 9.04, 9.04, 7.77, 1.92,
           4.81, 8.22, 7.59, 3.52, 1.18,
           8.11, 4.34, 3.73, 2.26, 1.04,
           },{
           4.19, 8.83, 4.73, 13.28, 7.03,
           12.50, 19.30, 15.21, 10.26, 8.43,
           4.61, 4.47, 5.84, 5.68, 0.98,
           -2.17, 3.50, 3.49, 2.40, 0.62,
           -0.34, -2.02, 0.61, -1.12, -7.12,
       }}});
    }};
};